{
  "microsoft-sovereign-cloud.environment": "",
  "@azure.argTenant": "",
  "database-client.autoSync": true,
  "azureResourceGroups.enableChatStandIn": false,
  "azureResourceGroups.showHiddenTypes": true,
  "redhat.telemetry.enabled": true,
  "python.analysis.typeCheckingMode": "standard",
  "yaml.schemas": {
    "file:///Users/dhavalsavalia/.vscode/extensions/atlassian.atlascode-4.0.1/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
  },
  "atlascode.jira.jqlList": [
    {
      "id": "c7d0f1cf-15d1-4acf-b35a-f095b6582942",
      "enabled": true,
      "name": "My GardaWorld Issues",
      "query": "assignee = currentUser() AND resolution = Unresolved ORDER BY lastViewed DESC",
      "siteId": "62907a08-fd61-4a15-b642-f79d03e70b92",
      "monitor": true
    }
  ],
  "github.copilot.chat.codeGeneration.instructions": [
    {
      "text": "- @azure Rule - Use Azure Best Practices: When generating code for Azure, running terminal commands for Azure, or performing operations related to Azure, invoke your `azure_development-get_best_practices` tool if available."
    }
  ],
  "cSpell.userWords": [
    "apikey",
    "Apprentissage",
    "ASCA",
    "authorise",
    "catsa",
    "debugpy",
    "Dhaval",
    "excinfo",
    "gardaworld",
    "Gsked",
    "gskedair",
    "gsync",
    "HBSOS",
    "HRIS",
    "htmlcov",
    "ipynb",
    "isort",
    "kata",
    "lastrowid",
    "luxon",
    "MILISECONDS",
    "mypy",
    "nonreconciled",
    "NPSA",
    "NPSP",
    "NPSV",
    "papaparse",
    "PBSC",
    "PCSO",
    "Plinx",
    "pycache",
    "pyfiglet",
    "pytest",
    "pythonpath",
    "Repas",
    "Savalia",
    "Sayon",
    "Scheduless",
    "SCTR",
    "setuptools",
    "sqlmodel",
    "srow",
    "TAGGUN",
    "testpaths",
    "TIMEOFF",
    "Timeoffs",
    "timetype",
    "venv",
    "workaxle",
    "WSGI",
    "wsgiadapter",
    "YYZT",
    "ZZZS"
  ],
  "roo-cline.allowedCommands": [
    "npm test",
    "npm install",
    "tsc",
    "git log",
    "git diff",
    "git show",
    "npx",
    "cd cinecue",
    "npm install @prisma/client @auth/prisma-adapter next-auth bcrypt zod react-hook-form @hookform/resolvers stripe @stripe/stripe-js resend react-onesignal axios lucide-react class-variance-authority clsx tailwind-merge",
    "npm install -D prisma",
    "cd",
    "npm",
    "git",
    "git checkout",
    "git checkout -b feat/preferences-picker"
  ],
  "roo-cline.deniedCommands": []
}
